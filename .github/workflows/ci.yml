name: CI

on:
  push:
    branches:
      - master

jobs:
  build-and-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository # Faz o GitHub Actions baixar o código do repositório no runner.
        uses: actions/checkout@v3

      - name: Setup .NET # Instala o .NET 7 no runner.
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies # Restaura os pacotes NuGet do seu projeto.
        run: dotnet restore ClientManagerBackend/ClientManagerBackend.sln

      - name: Build # Compila o projeto. --no-restore evita restaurar pacotes novamente, já que fizemos antes.
        run: dotnet build ClientManagerBackend/ClientManagerBackend.sln --configuration Release --no-restore

      - name: Run tests with coverage
        run: |
          dotnet test ClientManagerBackend/ClientManagerBackend.Tests/ClientManagerBackend.Testes.csproj \
          --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=cobertura \
          /p:CoverletOutput=ClientManagerBackend/Testes/TestResults/coverage.cobertura.xml

      - name: Generate coverage report # Gera o relatório de cobertura de código.
        run: |
          reportgenerator \
            -reports:ClientManagerBackend/ClientManagerBackend.Tests/TestResults/coverage.cobertura.xml \
            -targetdir:ClientManagerBackend/ClientManagerBackend.Tests/TestResults/CoverageReport \
            -reporttypes:Html

      - name: Upload coverage report # Faz o upload do relatório de cobertura como um artefato do workflow.
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ClientManagerBackend/ClientManagerBackend.Tests/TestResults/CoverageReport
